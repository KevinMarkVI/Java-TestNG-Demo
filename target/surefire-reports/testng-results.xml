<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="50" passed="45">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="63879" started-at="2019-09-18T21:43:46Z" finished-at="2019-09-18T21:44:50Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="63879" started-at="2019-09-18T21:43:46Z" finished-at="2019-09-18T21:44:50Z">
      <class name="com.yourcompany.SampleSauceTest">
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="26054" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="39982" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="FAIL" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="37171" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.17763]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
	at com.yourcompany.SampleSauceTest.login(SampleSauceTest.java:227)
	at com.yourcompany.SampleSauceTest.lockedOutLoginFlow(SampleSauceTest.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.id: user-name
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'SL-1142', ip: 'fe80:0:0:0:4fa:9ddc:f273:c531%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_191'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="25540" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="FAIL" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="36527" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.17763]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
	at com.yourcompany.SampleSauceTest.login(SampleSauceTest.java:227)
	at com.yourcompany.SampleSauceTest.validLoginFlow(SampleSauceTest.java:186)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.id: user-name
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'SL-1142', ip: 'fe80:0:0:0:4fa:9ddc:f273:c531%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_191'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="FAIL" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="19066" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.17763]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Swag Labs] but found [Error 400 Could not proxy https://www.saucedemo.com:443/ java.lang.RuntimeException: Couldn't establish SSL handshake. Try using trustAllSSLCertificates. Received fatal alert: handshake_failure]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Swag Labs] but found [Error 400 Could not proxy https://www.saucedemo.com:443/ java.lang.RuntimeException: Couldn't establish SSL handshake. Try using trustAllSSLCertificates. Received fatal alert: handshake_failure]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at com.yourcompany.SampleSauceTest.demoPageTitle(SampleSauceTest.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="43643" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="52854" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="51686" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="FAIL" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="34411" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.17763]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
	at com.yourcompany.SampleSauceTest.login(SampleSauceTest.java:227)
	at com.yourcompany.SampleSauceTest.problemLoginFlow(SampleSauceTest.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.id: user-name
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'SL-1142', ip: 'fe80:0:0:0:4fa:9ddc:f273:c531%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_191'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="22151" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="17925" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="22027" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="21743" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="FAIL" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="36427" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18.17763]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: user-name (tried for 15 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:113)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:283)
	at com.yourcompany.SampleSauceTest.login(SampleSauceTest.java:227)
	at com.yourcompany.SampleSauceTest.invalidLoginFlow(SampleSauceTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.id: user-name
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'SL-1142', ip: 'fe80:0:0:0:4fa:9ddc:f273:c531%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_191'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260)
	... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="39931" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="29447" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="17817" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="23871" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="21425" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="17397" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="19422" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="21838" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="20962" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="23301" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="19504" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="15151" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="25119" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="7921" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="19609" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="33250" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="13473" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:43:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[55.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="21719" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="28644" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="56942" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="29841" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[64]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.14]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="20988" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="40305" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="19135" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="41032" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[69.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="invalidLoginFlow" duration-ms="23575" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.invalidLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLoginFlow -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="40718" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="problemLoginFlow" duration-ms="57055" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[69.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.problemLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- problemLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="10966" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:43:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="32108" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="52937" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[69.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="62284" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[70.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="validLoginFlow" duration-ms="19758" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 10.12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.validLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLoginFlow -->
        <test-method status="PASS" signature="demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="demoPageTitle" duration-ms="35309" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[69.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.demoPageTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demoPageTitle -->
        <test-method status="PASS" signature="lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="lockedOutLoginFlow" duration-ms="40955" started-at="2019-09-18T15:43:46Z" data-provider="hardCodedBrowsers" finished-at="2019-09-18T15:44:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[69.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X 10.10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.yourcompany.SampleSauceTest.lockedOutLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lockedOutLoginFlow -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="418" started-at="2019-09-18T15:43:54Z" finished-at="2019-09-18T15:43:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="3981" started-at="2019-09-18T15:43:57Z" finished-at="2019-09-18T15:44:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="266" started-at="2019-09-18T15:43:59Z" finished-at="2019-09-18T15:43:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="1153" started-at="2019-09-18T15:44:01Z" finished-at="2019-09-18T15:44:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="1319" started-at="2019-09-18T15:44:03Z" finished-at="2019-09-18T15:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="837" started-at="2019-09-18T15:44:04Z" finished-at="2019-09-18T15:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="893" started-at="2019-09-18T15:44:04Z" finished-at="2019-09-18T15:44:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="728" started-at="2019-09-18T15:44:05Z" finished-at="2019-09-18T15:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=FAILURE method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="3032" started-at="2019-09-18T15:44:05Z" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="745" started-at="2019-09-18T15:44:05Z" finished-at="2019-09-18T15:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="638" started-at="2019-09-18T15:44:05Z" finished-at="2019-09-18T15:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2795" started-at="2019-09-18T15:44:05Z" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="485" started-at="2019-09-18T15:44:06Z" finished-at="2019-09-18T15:44:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="513" started-at="2019-09-18T15:44:07Z" finished-at="2019-09-18T15:44:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2550" started-at="2019-09-18T15:44:07Z" finished-at="2019-09-18T15:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="413" started-at="2019-09-18T15:44:07Z" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="3458" started-at="2019-09-18T15:44:07Z" finished-at="2019-09-18T15:44:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="298" started-at="2019-09-18T15:44:07Z" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2234" started-at="2019-09-18T15:44:08Z" finished-at="2019-09-18T15:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2049" started-at="2019-09-18T15:44:08Z" finished-at="2019-09-18T15:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="349" started-at="2019-09-18T15:44:08Z" finished-at="2019-09-18T15:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="714" started-at="2019-09-18T15:44:09Z" finished-at="2019-09-18T15:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="562" started-at="2019-09-18T15:44:09Z" finished-at="2019-09-18T15:44:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2902" started-at="2019-09-18T15:44:10Z" finished-at="2019-09-18T15:44:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="650" started-at="2019-09-18T15:44:11Z" finished-at="2019-09-18T15:44:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="3170" started-at="2019-09-18T15:44:11Z" finished-at="2019-09-18T15:44:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="3651" started-at="2019-09-18T15:44:12Z" finished-at="2019-09-18T15:44:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="1546" started-at="2019-09-18T15:44:14Z" finished-at="2019-09-18T15:44:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="424" started-at="2019-09-18T15:44:15Z" finished-at="2019-09-18T15:44:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="4676" started-at="2019-09-18T15:44:16Z" finished-at="2019-09-18T15:44:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="789" started-at="2019-09-18T15:44:18Z" finished-at="2019-09-18T15:44:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="823" started-at="2019-09-18T15:44:19Z" finished-at="2019-09-18T15:44:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="669" started-at="2019-09-18T15:44:20Z" finished-at="2019-09-18T15:44:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=FAILURE method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="4085" started-at="2019-09-18T15:44:21Z" finished-at="2019-09-18T15:44:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demoPageTitle status=SUCCESS method=SampleSauceTest.demoPageTitle(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="377" started-at="2019-09-18T15:44:22Z" finished-at="2019-09-18T15:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=FAILURE method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="319" started-at="2019-09-18T15:44:22Z" finished-at="2019-09-18T15:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=FAILURE method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="317" started-at="2019-09-18T15:44:23Z" finished-at="2019-09-18T15:44:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=FAILURE method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="4093" started-at="2019-09-18T15:44:26Z" finished-at="2019-09-18T15:44:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="658" started-at="2019-09-18T15:44:26Z" finished-at="2019-09-18T15:44:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="489" started-at="2019-09-18T15:44:26Z" finished-at="2019-09-18T15:44:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="411" started-at="2019-09-18T15:44:26Z" finished-at="2019-09-18T15:44:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="343" started-at="2019-09-18T15:44:27Z" finished-at="2019-09-18T15:44:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=lockedOutLoginFlow status=SUCCESS method=SampleSauceTest.lockedOutLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="2178" started-at="2019-09-18T15:44:27Z" finished-at="2019-09-18T15:44:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLoginFlow status=SUCCESS method=SampleSauceTest.invalidLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="638" started-at="2019-09-18T15:44:29Z" finished-at="2019-09-18T15:44:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="4160" started-at="2019-09-18T15:44:37Z" finished-at="2019-09-18T15:44:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="575" started-at="2019-09-18T15:44:39Z" finished-at="2019-09-18T15:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="492" started-at="2019-09-18T15:44:39Z" finished-at="2019-09-18T15:44:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="465" started-at="2019-09-18T15:44:43Z" finished-at="2019-09-18T15:44:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="1020" started-at="2019-09-18T15:44:43Z" finished-at="2019-09-18T15:44:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=problemLoginFlow status=SUCCESS method=SampleSauceTest.problemLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf]" name="tearDown" is-config="true" duration-ms="1564" started-at="2019-09-18T15:44:48Z" finished-at="2019-09-18T15:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLoginFlow status=SUCCESS method=SampleSauceTest.validLoginFlow(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.yourcompany.SampleSauceTest@6e8dacdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.yourcompany.SampleSauceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
